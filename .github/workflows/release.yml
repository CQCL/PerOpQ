name: Release

on:
  release:
    branches:
      - main
  workflow_dispatch:

jobs:
  tests:
    name: Run ${{ matrix.session }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.10", os: "ubuntu-22.04", session: "pre-commit" }
          - { python: "3.10", os: "macos-12", session: "mypy" }
          - { python: "3.10", os: "windows-2022", session: "tests" }
          - { python: "3.10", os: "macos-12", session: "tests" }
          - { python: "3.11", os: "windows-2022", session: "tests" }
          - { python: "3.11", os: "ubuntu-22.04", session: "tests" }
          - { python: "3.11", os: "macos-12", session: "tests" }
          - { python: "3.10", os: "ubuntu-22.04", session: "docs-build" }
    uses: ./.github/workflows/nox-session.yml
    with:
      python-version: ${{ matrix.python }}
      os: ${{ matrix.os }}
      nox-session: ${{ matrix.session }}

  tests-with-coverage:
    name: Run ${{ matrix.session }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.10", os: "ubuntu-22.04", session: "tests" }
    uses: ./.github/workflows/nox-session.yml
    with:
      python-version: ${{ matrix.python }}
      os: ${{ matrix.os }}
      nox-session: ${{ matrix.session }}
      generate-coverage-report: true

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - tests
      - tests-with-coverage
    if: ${{ always() && github.event_name == 'release' && contains(join(needs.*.result, ','), 'success') }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --upgrade pip
          pip --version

      - name: Install Poetry
        run: |
          pipx install --pip-args=--constraint=dev-tool-requirements.txt poetry
          poetry --version

      - name: Build package
        run: |
          poetry build --ansi

      - name: Publish package on PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.12
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  test-release:
    name: Test Release
    runs-on: ubuntu-latest
    needs:
      - tests
      - tests-with-coverage
    if: ${{ always() && github.event_name == 'workflow_dispatch' && contains(join(needs.*.result, ','), 'success') }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"

      - name: Upgrade pip
        run: |
          pip install --upgrade pip
          pip --version

      - name: Install Poetry
        run: |
          pipx install --pip-args=--constraint=dev-tool-requirements.txt poetry
          poetry --version

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Bump version for developmental release
        run: |
          poetry version patch &&
          version=$(poetry version | awk '{ print $2 }') &&
          poetry version $version.dev.$(date +%s)

      - name: Build package
        run: |
          poetry build --ansi

      - name: Publish package on TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.12
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
